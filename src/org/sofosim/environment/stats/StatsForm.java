/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StatsForm.java
 *
 * Created on 5/04/2011, 1:48:14 PM
 */

package org.sofosim.environment.stats;

import java.awt.Font;
import java.util.LinkedHashMap;
import java.util.Map.Entry;
import org.sofosim.environment.stats.printer.StatsDataWriter;

/**
 *
 * @author cfrantz
 */
public class StatsForm extends javax.swing.JFrame implements StatisticsListener{

	private boolean includeFileNameWhenPrinting = false;
	
    /** Creates new form StatsForm */
    public StatsForm() {
        initComponents();
        txtTextArea.setFont(new Font(Font.DIALOG, Font.PLAIN, 12));
        this.setLocation(750, 100);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtTextArea = new javax.swing.JTextArea();
        btnSaveStats = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Simulation Statistics");

        txtTextArea.setColumns(20);
        txtTextArea.setRows(5);
        jScrollPane1.setViewportView(txtTextArea);

        btnSaveStats.setText("Save Stats");
        btnSaveStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveStatsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSaveStats, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSaveStats)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    StatsDataWriter writer = null;
    String outfile = null;
    
    private void btnSaveStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveStatsActionPerformed
        if(writer == null){
            outfile = "";
            if(Statistics.outFilePrefix != null){
                outfile = Statistics.outFilePrefix;
            }
            outfile += Statistics.statsFileSuffix;
            writer = new StatsDataWriter(outfile + Statistics.buildFilenameRoundMidfix() + Statistics.ending);
        } else {
            writer.setFilename(outfile + Statistics.buildFilenameRoundMidfix() + Statistics.ending);
        }
        StringBuffer outText = new StringBuffer();
        if(includeFileNameWhenPrinting){
        	outText.append("Filename: ").append(writer.getFilename()).append("\n");
        }
        outText.append(txtTextArea.getText());
        writer.writeAndClose(outText);
        if(writer.enabled){
        	System.out.println("Wrote statistics window content to file '" + writer.getFilename() + "'.");
        }
    }//GEN-LAST:event_btnSaveStatsActionPerformed

    public void saveStatsToFile(boolean includeFileName){
    	if(includeFileName){
    		if(!includeFileNameWhenPrinting){
    			includeFileNameWhenPrinting = true;
    			btnSaveStatsActionPerformed(null);
    			includeFileNameWhenPrinting = false;
    		} else {
    			btnSaveStatsActionPerformed(null);
    		}
    	} else {
    		if(includeFileNameWhenPrinting){
    			includeFileNameWhenPrinting = false;
    			btnSaveStatsActionPerformed(null);
    			includeFileNameWhenPrinting = true;
    		} else {
    			btnSaveStatsActionPerformed(null);
    		}
    	}
    	
    }
    
    /**
    * @param args the command line arguments
    */
    /*
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StatsForm().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveStats;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtTextArea;
    // End of variables declaration//GEN-END:variables

    public void updateStats(StringBuffer buffer, LinkedHashMap<String, Object> structuredValues, boolean useMap) {
        if(!useMap){
        	txtTextArea.setText(buffer.toString());
        } else {
        	StringBuffer tempBuf = new StringBuffer();
        	for(Entry<String,Object> entry: structuredValues.entrySet()){
        		tempBuf.append(entry.getKey()).append(": ").append(entry.getValue()).append("\n");
        	}
        	txtTextArea.setText(tempBuf.toString());
        }
    }

}
